plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.provision'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

ext {
	set('mapstructVersion', '1.6.0')
	set('jwtLibVersion','0.12.3')
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.3') {
		exclude group: "io.swagger.core.v3", module: "swagger-annotations"
	}
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.liquibase:liquibase-core'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation "io.jsonwebtoken:jjwt-api:${jwtLibVersion}"
	implementation "io.jsonwebtoken:jjwt-impl:${jwtLibVersion}"
	implementation "io.jsonwebtoken:jjwt-jackson:${jwtLibVersion}"
	testImplementation 'com.h2database:h2:2.3.232'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	enabled = true
	archiveFileName = "provision-demo.jar"
}
